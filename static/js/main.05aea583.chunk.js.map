{"version":3,"sources":["components/UI/Modal/Modal.module.scss","components/EventItem/EventItem.module.scss","components/Calendar/CalendarBody/CalendarBody.module.scss","components/UI/Popup/Popup.module.scss","components/Calendar/CalendarHeader/CalendarHeader.module.scss","components/Header/Header.module.scss","components/Calendar/Calendar.module.scss","components/UI/Button/Button.module.scss","components/UI/Card/Card.module.scss","components/Footer/Footer.module.scss","components/Header/Header.js","components/UI/Button/Button.js","components/UI/Card/Card.js","components/UI/Popup/Popup.js","components/EventItem/EventItem.js","components/UI/Modal/Modal.js","components/Calendar/CalendarBody/CalendarBody.js","components/Calendar/CalendarHeader/CalendarHeader.js","hooks/useDate.js","components/Calendar/Calendar.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","classes","header","Button","props","type","btn","aria-label","ariaLabel","onClick","children","Card","card","Popup","closePopupHandler","onDataToEventItem","deleteEventHandler","eventItem","onDelete","Backdrop","backdrop","PopupOverlay","popup","popup_card","reactDom","createPortal","document","getElementById","EventItem","event","useState","isEditing","setEditing","setEventItem","text","eventText","setEventText","isValid","setIsValid","isPopupOpen","setIsPopupOpen","useEffect","id","date","defaultValue","onChange","e","target","value","autoFocus","trim","length","eventIdItem","onEdit","closePopup","eventId","Modal","selectedDate","filteredEvents","events","filter","closeModalHandler","onDataToCalendar","eventInput","useRef","isExpand","setIsExpand","expandFormHandler","contractFormHandler","submitHandler","preventDefault","enteredEvent","current","eventData","uuidv4","onEventDataToCalendar","deleteHandler","editHandler","ModalOverlay","modal","modal_content","onSubmit","htmlFor","ref","map","CalendarBody","daysInMonth","weekdays","emptyDays","day","month","year","daysArray","setDaysArray","daysInMonthArray","totalDays","arrayIndex","dayNumber","currentDay","dayString","filterDate","push","openModalHandler","selectDate","outerText","calendar_body","index","isBigDevice","slice","number","CalendarHeader","backMonthHandler","nextMonthHandler","dateInHeader","setDateInHeader","toLocaleString","calendar_header","calendar_buttons","useDate","Date","dateNav","setDateNav","setMonth","getMonth","getDate","getFullYear","initialWeekday","toLocaleDateString","weekday","indexOf","split","Calendar","setIsBigDevice","changeDevicesHandler","bigDevice","matches","window","matchMedia","addEventListener","removeEventListener","isModalOpen","setIsModalOpen","setSelectedDate","setEvents","close","prevEvents","updatedEvents","calendar","open","Footer","footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.05aea583.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Modal_App__MUck5\",\"buttons\":\"Modal_buttons__1lHHu\",\"backdrop\":\"Modal_backdrop__2a-iO\",\"btn-add\":\"Modal_btn-add__8OdJB\",\"btn-remove\":\"Modal_btn-remove__1uu1r\",\"btn-cancel\":\"Modal_btn-cancel__1-YYB\",\"modal_content\":\"Modal_modal_content__10z8X\",\"events\":\"Modal_events__2ArNr\",\"modal\":\"Modal_modal__2mMi3\",\"btn-close\":\"Modal_btn-close__3dS5N\",\"valid\":\"Modal_valid__2uSZx\",\"invalid\":\"Modal_invalid__2nn8l\",\"red-text\":\"Modal_red-text__346b6\",\"events-title\":\"Modal_events-title__7DN58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"EventItem_App__uNr6Z\",\"buttons\":\"EventItem_buttons__1Hgti\",\"backdrop\":\"EventItem_backdrop__36lMk\",\"btn-add\":\"EventItem_btn-add__3lAt4\",\"btn-remove\":\"EventItem_btn-remove__2mKyw\",\"btn-cancel\":\"EventItem_btn-cancel__qIHhh\",\"event-item-padding\":\"EventItem_event-item-padding__2Ka0h\",\"valid\":\"EventItem_valid__3GicS\",\"invalid\":\"EventItem_invalid__21hT7\",\"event-item\":\"EventItem_event-item__1VFb-\",\"event-input\":\"EventItem_event-input__4qPk4\",\"btn-delete\":\"EventItem_btn-delete__1qpQq\",\"btn-save\":\"EventItem_btn-save__32X2e\",\"red-text\":\"EventItem_red-text__3XHOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"CalendarBody_App__OhMpV\",\"buttons\":\"CalendarBody_buttons__2rc4g\",\"backdrop\":\"CalendarBody_backdrop__3EhLk\",\"btn-add\":\"CalendarBody_btn-add__3uaJU\",\"btn-remove\":\"CalendarBody_btn-remove__33A0g\",\"btn-cancel\":\"CalendarBody_btn-cancel__3Q6Kj\",\"there-are-events\":\"CalendarBody_there-are-events__3xFth\",\"calendar_body\":\"CalendarBody_calendar_body__2w3i8\",\"week-days\":\"CalendarBody_week-days__6U5Tn\",\"month-days\":\"CalendarBody_month-days__1Mvow\",\"number-day\":\"CalendarBody_number-day__3b1th\",\"no-empty-days\":\"CalendarBody_no-empty-days__27MeW\",\"current-day\":\"CalendarBody_current-day__2NL3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"Popup_App__2GFm3\",\"buttons\":\"Popup_buttons__3_45I\",\"backdrop\":\"Popup_backdrop__39MGB\",\"btn-add\":\"Popup_btn-add__3txm4\",\"btn-remove\":\"Popup_btn-remove__3ppQ9\",\"btn-cancel\":\"Popup_btn-cancel__1YKoz\",\"popup\":\"Popup_popup__KqgCl\",\"popup_card\":\"Popup_popup_card__2URoO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"CalendarHeader_App__1unbA\",\"buttons\":\"CalendarHeader_buttons__1fUEc\",\"backdrop\":\"CalendarHeader_backdrop__Mbyjo\",\"btn-add\":\"CalendarHeader_btn-add__2CqKy\",\"btn-remove\":\"CalendarHeader_btn-remove__vHw_j\",\"btn-cancel\":\"CalendarHeader_btn-cancel__1moJY\",\"calendar_header\":\"CalendarHeader_calendar_header__37Id2\",\"calendar_buttons\":\"CalendarHeader_calendar_buttons__1ZeL0\",\"btn-left\":\"CalendarHeader_btn-left__rg-b8\",\"btn-right\":\"CalendarHeader_btn-right__3m3AP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"Calendar_calendar__B0R-q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__6u7Tq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2jlaB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","import React from \"react\";\n\nimport classes from \"./Header.module.scss\";\n\nconst Header = () => {\n  return (\n    <header className={classes.header}>\n      <h1>Calendar</h1>\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nimport classes from \"./Button.module.scss\";\n\nconst Button = (props) => {\n  return (\n    <button\n      type={props.type}\n      className={`${classes.btn} ${props.className}`}\n      aria-label={props.ariaLabel}\n      onClick={props.onClick}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\n\nimport classes from \"./Card.module.scss\";\n\nconst Card = (props) => {\n  return (\n    <div className={`${classes.card} ${props.className}`}>{props.children}</div>\n  );\n};\n\nexport default Card;\n","import React, { Fragment } from \"react\";\nimport reactDom from \"react-dom\";\n\nimport Card from \"../Card/Card\";\nimport Button from \"../Button/Button\";\nimport classes from \"./Popup.module.scss\";\n\nconst Popup = (props) => {\n  // Hide the popup when the \"Close\" button is clicked\n  const closePopupHandler = () => {\n    let closePopup = false;\n\n    // Sends the value to the parent component \"EventItem\"\n    props.onDataToEventItem(closePopup);\n  };\n  \n  const deleteEventHandler = () => {\n    let eventItem = props.eventItem;\n\n    // Sends the value to the parent component \"EventItem\"\n    props.onDelete(eventItem);\n  }\n\n  // Show the backdrop\n  const Backdrop = () => {\n    return <div className={classes.backdrop} onClick={closePopupHandler}></div>;\n  };\n\n  // Show the popup over the backdrop\n  const PopupOverlay = () => {\n    return (\n      <div className={classes.popup}>\n        <Card className={classes.popup_card}>\n          <h3>Are you sure?</h3>\n          <p>Once deleted, you won't be able to recover this event</p>\n          <div className={classes[\"buttons\"]}>\n            <Button \n              type=\"button\" \n              className={classes[\"btn-remove\"]}\n              onClick={deleteEventHandler}\n            >\n              Remove\n            </Button>\n            <Button\n              type=\"button\"\n              className={classes[\"btn-cancel\"]}\n              onClick={closePopupHandler}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Card>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      {reactDom.createPortal(\n        <Backdrop />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {reactDom.createPortal(\n        <PopupOverlay />,\n        document.getElementById(\"popup-root\")\n      )}\n    </Fragment>\n  );\n};\n\nexport default Popup;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./EventItem.module.scss\";\nimport Button from \"../UI/Button/Button\";\nimport Popup from \"../UI/Popup/Popup\";\n\nconst EventItem = (props) => {\n  const { event } = props;\n\n  const deleteHandler = (eventItem) => {\n    let eventId = eventItem.id;\n\n    // Sends the value to the parent component \"Modal\"\n    props.onDelete(eventId);\n  };\n\n  const [isEditing, setEditing] = useState(false);\n\n  // When an event is clicked, the edit mode opens\n  const startEditHandler = () => {\n    setEditing(true);\n  };\n\n  const [eventItem, setEventItem] = useState(event);\n  const [eventText, setEventText] = useState(event.text);\n\n  const editEventHandler = (e) => {\n    setEventText(e.target.value);\n  };\n\n  const [isValid, setIsValid] = useState(true);\n  // When the check mark button is clicked, the edit mode is closed\n  const endEditHandler = () => {\n    // If the input edit is empty, the edit mode is not closed\n    if (eventText.trim().length === 0) {\n      setEditing(true);\n      setIsValid(false);\n      return;\n    }\n\n    setEditing(false);\n\n    let eventIdItem = event.id;\n\n    // Sends the values to the parent component \"Modal\"\n    props.onEdit(eventItem, eventIdItem);\n  };\n\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  // Open Popup\n  const openPopupHandler = () => {\n    setIsPopupOpen(true);\n  };\n\n  // Close Popup\n  const closePopupHandler = (closePopup) => {\n    setIsPopupOpen(closePopup);\n  };\n\n  useEffect(() => {\n    // The changes contained in the edited event\n    setEventItem(() => ({\n      id: event.id,\n      text: eventText,\n      date: event.date,\n    }));\n  }, [event.date, event.id, eventText]);\n\n  return (\n    <Fragment>\n      <li\n        id={event.id}\n        className={`${classes[\"event-item\"]} ${\n          !isEditing ? classes[\"event-item-padding\"] : \"\"\n        } ${!isValid ? classes[\"invalid\"] : classes[\"valid\"]}`}\n      >\n        {!isEditing ? (\n          <Fragment>\n            <span onClick={startEditHandler}>{eventText}</span>\n            <Button\n              type=\"button\"\n              className={classes[\"btn-delete\"]}\n              onClick={openPopupHandler}\n            />\n            {isPopupOpen && (\n              <Popup\n                onDataToEventItem={closePopupHandler}\n                onDelete={deleteHandler}\n                eventItem={eventItem}\n              />\n            )}\n          </Fragment>\n        ) : (\n          <Fragment>\n            <input\n              type=\"text\"\n              className={classes[\"event-input\"]}\n              defaultValue={eventText}\n              onChange={editEventHandler}\n              autoFocus\n            />\n            <Button\n              type=\"button\"\n              className={classes[\"btn-save\"]}\n              onClick={endEditHandler}\n            />\n          </Fragment>\n        )}\n      </li>\n      {!isValid && (\n        <span className={classes[\"red-text\"]}>You need to enter text</span>\n      )}\n    </Fragment>\n  );\n};\n\nexport default EventItem;\n\nEventItem.propTypes = {\n  isEditing: PropTypes.bool,\n  eventId: PropTypes.number,\n  eventIdItem: PropTypes.number,\n  eventItem: PropTypes.object,\n  eventText: PropTypes.string,\n  isValid: PropTypes.bool,\n};\n","import React, { Fragment, useRef, useState } from \"react\";\nimport reactDom from \"react-dom\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./Modal.module.scss\";\nimport Button from \"../Button/Button\";\nimport EventItem from \"../../EventItem/EventItem\";\nimport Card from \"../Card/Card\";\n\nconst Modal = (props) => {\n  const { selectedDate, events } = props;\n\n  // Filter all events that contain the selected date\n  const filteredEvents = events.filter((event) => event.date === selectedDate);\n\n  // Hide the modal when the \"Close\" button is clicked\n  const closeModalHandler = () => {\n    let close = false;\n\n    // Sends the value to the parent component \"Calendar\"\n    props.onDataToCalendar(close);\n  };\n\n\n  const eventInput = useRef();\n  const [isValid, setIsValid] = useState(true);\n  const [isExpand, setIsExpand] = useState(false);\n\n  // Clicking the \"Add Event\" button expands the form\n  const expandFormHandler = () => {\n    setIsExpand(true);\n  };\n\n  // Clicking the \"Cancel\" button collapses the form\n  const contractFormHandler = () => {\n    setIsExpand(false);\n    setIsValid(true);\n  };\n\n  // Add a new event\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEvent = eventInput.current.value;\n\n    // If the input is empty, the \"Add Event\" button will not work and a new event will not be added\n    if (enteredEvent.trim().length === 0) {\n      setIsValid(false);\n      return;\n    }\n\n    const eventData = {\n      id: uuidv4(),\n      text: enteredEvent,\n      date: selectedDate,\n    };\n\n    setIsValid(true);\n\n    // Sends the value to the parent component \"Calendar\"\n    props.onEventDataToCalendar(eventData);\n  };\n\n  const deleteHandler = (eventId) => {\n    // Sends the value to the parent component \"Calendar\"\n    props.onDelete(eventId);\n  };\n\n  const editHandler = (eventItem, eventIdItem) => {\n    // Sends the values to the parent component \"Calendar\"\n    props.onEdit(eventItem, eventIdItem);\n  };\n\n  // Show the backdrop\n  const Backdrop = () => {\n    return <div className={classes.backdrop} onClick={closeModalHandler}></div>;\n  };\n\n  // Show the modal over the backdrop\n  const ModalOverlay = () => {\n    return (\n      <div className={classes.modal}>\n        <Card className={classes.modal_content}>\n          <Button\n            type=\"button\"\n            className={classes[\"btn-close\"]}\n            onClick={closeModalHandler}\n          />\n          {isExpand ? (\n            <form onSubmit={submitHandler}>\n              <label htmlFor=\"event\">Event</label>\n              <input\n                id=\"event\"\n                type=\"text\"\n                ref={eventInput}\n                className={!isValid ? classes[\"invalid\"] : classes[\"valid\"]}\n                autoFocus\n              />\n              {!isValid && (\n                <span className={classes[\"red-text\"]}>\n                  You need to enter text\n                </span>\n              )}\n              <div className={classes[\"buttons\"]}>\n                <Button type=\"submit\" className={classes[\"btn-add\"]}>\n                  Add Event\n                </Button>\n                <Button\n                  type=\"button\"\n                  className={classes[\"btn-cancel\"]}\n                  onClick={contractFormHandler}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          ) : (\n            <Button\n              type=\"button\"\n              className={classes[\"btn-add\"]}\n              onClick={expandFormHandler}\n            >\n              Add Event\n            </Button>\n          )}\n          <div className={classes[\"events\"]}>\n            {filteredEvents.length > 0 ? (\n              <Fragment>\n                <div className={classes[\"events-title\"]}>Events for today:</div>\n                <ul className={classes[\"event-list\"]}>\n                  {filteredEvents.map((event) => (\n                    <EventItem\n                      key={event.id}\n                      event={event}\n                      onDelete={deleteHandler}\n                      onEdit={editHandler}\n                    />\n                  ))}\n                </ul>\n              </Fragment>\n            ) : (\n              <p>You don't have any events today</p>\n            )}\n          </div>\n        </Card>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      {reactDom.createPortal(\n        <Backdrop />,\n        document.getElementById(\"backdrop-root\")\n      )}\n      {reactDom.createPortal(\n        <ModalOverlay />,\n        document.getElementById(\"overlay-root\")\n      )}\n    </Fragment>\n  );\n};\n\nexport default Modal;\n\nModal.propTypes = {\n  filteredEvents: PropTypes.object,\n  close: PropTypes.bool,\n  isExpand: PropTypes.bool,\n  isValid: PropTypes.bool,\n  enteredEvent: PropTypes.string,\n  eventData: PropTypes.object,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./CalendarBody.module.scss\";\n\nconst CalendarBody = (props) => {\n  const {\n    daysInMonth,\n    weekdays,\n    emptyDays,\n    day,\n    month,\n    year,\n    events,\n    selectedDate,\n  } = props;\n\n  const [daysArray, setDaysArray] = useState([]);\n\n  useEffect(() => {\n    let daysInMonthArray = [];\n\n    let totalDays = emptyDays + daysInMonth;\n\n    for (let arrayIndex = 1; arrayIndex <= totalDays; arrayIndex++) {\n      // If the index of the array is greater than the number of empty days, the number of the day is displayed; otherwise nothing is displayed\n      let dayNumber = arrayIndex - emptyDays;\n      let currentDay = dayNumber === day;\n\n      let dayString = `${month + 1}/${arrayIndex - emptyDays}/${year}`;\n\n      let filterDate = events.filter((event) => event.date === dayString);\n\n      if (arrayIndex > emptyDays) {\n        daysInMonthArray.push({\n          id: uuidv4(),\n          day: dayNumber,\n          currentDay: currentDay,\n          events: filterDate.length > 0,\n        });\n      } else {\n        daysInMonthArray.push({\n          id: uuidv4(),\n          day: \"\",\n          currentDay: null,\n          events: null,\n        });\n      }\n    }\n\n    setDaysArray(daysInMonthArray);\n  }, [day, daysInMonth, emptyDays, events, month, selectedDate, year]);\n\n  // When any day is clicked, a modal opens\n  const openModalHandler = (event) => {\n    let open = true;\n\n    let selectDate = `${month + 1}/${event.target.outerText}/${year}`;\n\n    // Sends the value to the parent component \"Calendar\"\n    props.onDataToCalendar(open, selectDate);\n  };\n\n  return (\n    <div className={classes.calendar_body}>\n      <ul className={classes[\"week-days\"]}>\n        {weekdays.map((day, index) => (\n          <li key={index}>{props.isBigDevice ? day : day.slice(0, 2)}</li>\n        ))}\n      </ul>\n      <div className={classes[\"month-days\"]}>\n        {daysArray.map((number) => (\n          <div\n            key={number.id}\n            className={`${classes[\"number-day\"]} ${\n              number.currentDay !== null ? classes[\"no-empty-days\"] : \"\"\n            } ${number.currentDay ? classes[\"current-day\"] : \"\"} ${\n              number.events ? classes[\"there-are-events\"] : \"\"\n            }`}\n            onClick={number.currentDay !== null ? openModalHandler : null}\n          >\n            {number.day}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default CalendarBody;\n\nCalendarBody.propTypes = {\n  daysArray: PropTypes.object,\n  daysInMonthArray: PropTypes.object,\n  totalDays: PropTypes.number,\n  dayNumber: PropTypes.number,\n  currentDay: PropTypes.bool,\n  dayString: PropTypes.string,\n  filterDate: PropTypes.object,\n  open: PropTypes.bool,\n  selectDate: PropTypes.string,\n};\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./CalendarHeader.module.scss\";\nimport Button from \"../../UI/Button/Button\";\n\nconst CalendarHeader = (props) => {\n  const { backMonthHandler, nextMonthHandler, date } = props;\n\n  const [dateInHeader, setDateInHeader] = useState(\"\");\n\n  useEffect(() => {\n    // Get the month and year shown in the calendar header\n    setDateInHeader(\n      date.toLocaleString(\"en-us\", {\n        month: \"long\",\n        year: \"numeric\",\n      })\n    );\n  }, [date]);\n\n  return (\n    <div className={classes.calendar_header}>\n      <h2>{dateInHeader}</h2>\n      <div className={classes.calendar_buttons}>\n        <Button\n          type=\"button\"\n          className={classes[\"btn-left\"]}\n          ariaLabel=\"Back\"\n          onClick={backMonthHandler}\n        />\n        <Button\n          type=\"button\"\n          className={classes[\"btn-right\"]}\n          ariaLabel=\"Next\"\n          onClick={nextMonthHandler}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default CalendarHeader;\n\nCalendarHeader.propTypes = {\n  dateInHeader: PropTypes.string,\n};\n","import { useState } from \"react\";\n\nconst useDate = () => {\n  const weekdays = [\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n    \"Sunday\",\n  ];\n\n  // Create an instance of a date object\n  let date = new Date();\n\n  const [dateNav, setDateNav] = useState(0);\n\n  if (dateNav !== 0) {\n    date.setMonth(date.getMonth() + dateNav);\n  }\n\n  let day = date.getDate();\n  let month = date.getMonth();\n  let year = date.getFullYear();\n\n  // Get the last day of the month\n  let daysInMonth = new Date(year, month + 1, 0).getDate();\n\n  // Get the first day of the month\n  let firstDayOfMonth = new Date(year, month, 1);\n\n  // The day of the week of the first day of the month\n  const initialWeekday = firstDayOfMonth.toLocaleDateString(\"en-us\", {\n    weekday: \"long\",\n  });\n\n  // The number of empty days before the first day of the month\n  const emptyDays = weekdays.indexOf(initialWeekday.split(\", \")[0]);\n\n  // Decreases the value of the navigation date by one\n  // when clicking on the left arrow\n  const backMonthHandler = () => {\n    setDateNav(dateNav - 1);\n  };\n\n  // Increase the value of the navigation date by one\n  // when clicking the right arrow\n  const nextMonthHandler = () => {\n    setDateNav(dateNav + 1);\n  };\n\n  return {\n    weekdays,\n    date,\n    day,\n    month,\n    year,\n    daysInMonth,\n    emptyDays,\n    backMonthHandler,\n    nextMonthHandler,\n  };\n};\n\nexport default useDate;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport classes from \"./Calendar.module.scss\";\nimport Modal from \"../UI/Modal/Modal\";\nimport CalendarBody from \"./CalendarBody/CalendarBody\";\nimport CalendarHeader from \"./CalendarHeader/CalendarHeader\";\nimport useDate from \"../../hooks/useDate\";\n\nconst Calendar = () => {\n  const {\n    weekdays,\n    date,\n    day,\n    month,\n    year,\n    daysInMonth,\n    emptyDays,\n    backMonthHandler,\n    nextMonthHandler\n  } = useDate();\n\n  // Handle media queries\n  const [isBigDevice, setIsBigDevice] = useState();\n\n  // Switch between screen sizes\n  const changeDevicesHandler = (bigDevice) => {\n    setIsBigDevice(bigDevice.matches);\n  };\n\n  useEffect(() => {\n    const bigDevice = window.matchMedia(\"(min-width: 992px)\");\n    bigDevice.addEventListener(\"change\", changeDevicesHandler);\n    changeDevicesHandler(bigDevice);\n\n    return () => {\n      bigDevice.removeEventListener(\"change\", changeDevicesHandler);\n    };\n  }, []);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [selectedDate, setSelectedDate] = useState(\"\");\n\n  // Open Modal\n  const openModalHandler = (open, selectDate) => {\n    setIsModalOpen(open);\n    setSelectedDate(selectDate);\n  };\n\n  // Close Modal\n  const closeModalHandler = (close) => {\n    setIsModalOpen(close);\n  };\n\n  // It includes each new event in the event array\n  const [events, setEvents] = useState([]);\n  const eventDataHandler = (eventData) => {\n    setEvents((prevEvents) => {\n      return [eventData, ...prevEvents];\n    });\n  };\n\n  // It deletes the event that matches the selected id\n  const deleteEventHandler = (eventId) => {\n    setEvents((prevEvents) => {\n      let updatedEvents = prevEvents.filter((event) => event.id !== eventId);\n      return updatedEvents;\n    });\n  };\n\n  // It updates edited events\n  const updateEventHandler = (eventItem, eventIdItem) => {\n    setEvents((prevEvents) => {\n      let updatedEvents = prevEvents.filter(\n        (event) => event.id !== eventIdItem\n      );\n      return [eventItem, ...updatedEvents];\n    });\n  };\n\n  return (\n    <Fragment>\n      {isModalOpen && (\n        <Modal\n          events={events}\n          selectedDate={selectedDate}\n          onDataToCalendar={closeModalHandler}\n          onEventDataToCalendar={eventDataHandler}\n          onDelete={deleteEventHandler}\n          onEdit={updateEventHandler}\n        />\n      )}\n      <div className={classes.calendar}>\n        <CalendarHeader\n          date={date}\n          backMonthHandler={backMonthHandler}\n          nextMonthHandler={nextMonthHandler}\n        />\n        <CalendarBody\n          day={day}\n          month={month}\n          year={year}\n          events={events}\n          selectedDate={selectedDate}\n          weekdays={weekdays}\n          isBigDevice={isBigDevice}\n          daysInMonth={daysInMonth}\n          emptyDays={emptyDays}\n          onDataToCalendar={openModalHandler}\n        />\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Calendar;\n\nCalendar.propTypes = {\n  isBigDevice: PropTypes.bool,\n  dateNav: PropTypes.number,\n  isModalOpen: PropTypes.bool,\n  date: PropTypes.object,\n  day: PropTypes.number,\n  month: PropTypes.number,\n  year: PropTypes.number,\n  daysInMonth: PropTypes.number,\n  firstDayOfMonth: PropTypes.object,\n  initialWeekday: PropTypes.string,\n  emptyDays: PropTypes.number,\n  selectedDatea: PropTypes.string,\n  events: PropTypes.object,\n};\n","import React from \"react\";\n\nimport classes from \"./Footer.module.scss\";\n\nconst Footer = () => {\n  return (\n    <footer className={classes.footer}>\n      <span>\n        © Copyright 2021. <strong>\"TBM85\"</strong>\n      </span>\n      <span> All rights reserved</span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport Calendar from \"./components/Calendar/Calendar\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Calendar />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}